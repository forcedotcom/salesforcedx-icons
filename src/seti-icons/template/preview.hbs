<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{{ name }} | The icon font for Seti</title>

    <style type="text/css">

        html {
            box-sizing: border-box;
            font-size: 16px;
        }

        *, *:before, *:after {
            box-sizing: inherit;
        }

        body, h1, h2, h3, h4, h5, h6, p, ol, ul {
            margin: 0;
            padding: 0;
            font-weight: normal;
        }

        ol, ul {
            list-style: none;
        }

        img {
            max-width: 100%;
            height: auto;
        }

        body {
            font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;
            margin: 0;
            padding: 10px 20px;
            text-align: center;
            background-color: #f8f8f8;
        }

        h1 {
            font-weight: bold;
            margin: 24px;
        }

        .icon {
            width: 100px;
            display: inline-block;
            margin: 8px;
        }

        .icon:hover {
            cursor: pointer;
        }

        .icon:hover .inner {
            box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.24);
        }

        .icon .inner {
            display: inline-block;
            width: 100%;
            text-align: center;
            background-color: white;
            box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.06);
            border-radius: 4px;
            transition: all .3s ease-in-out;
        }

        .icon .inner {{ tag }} {
            padding: 16px 0;
            font-size: 48px;
            color: #333;
            overflow: hidden;
        }

        .icon .inner::before {
            overflow: hidden;
        }

        .label {
            margin-top: 8px;
            display: inline-block;
            width: 100%;
            box-sizing: border-box;
            padding: 4px;
            font-size: 10px;
            color: #666;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .description {
            display: none;
        }

        #search {
            display: flex;
            width: 100%;
            font-size: 16px;
            padding: 12px 16px;
            margin: 0 auto;
            max-width: 900px;
            margin-bottom: 24px;
            border: 1px solid rgba(0,0,0,.1);
            box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.06);
        }

        #search:focus {
            outline: none !important;
            border-color: #18a0fb;
        }

        #copier {
            position: absolute;
            top: -9999px;
            left: -9999px;
        }

        #notification {
            position: fixed;
            margin: auto;
            bottom: 40px;
            left: 50%;
            width: auto;
            transform: translateX(-50%);
            color: white;
            background-color: #212121;
            padding: 8px 24px;
            border-radius: 8px;
            opacity: 0;
            transition: opacity .3s ease-in-out;
            box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.2);
        }

        #notification-id {
            font-weight: bold;
        }

        #notification.show{
            opacity: .9;
        }

    </style>

    <link rel="stylesheet" type="text/css" href="{{ name }}.css" />
</head>
<body>

    <h1>{{ name }}</h1>

    <input type="text" id="search" placeholder="Search for icon names">

    <div id="icons">
    {{# each assets }}
        <div class="icon" data-name="{{ @key }}" title="{{ @key }}">
            <span class="inner">
                <{{ ../tag }} class="{{ ../prefix }} {{ ../prefix }}-{{ @key }}" aria-hidden="true"></{{ ../tag }}>
            </span>
            <br>
            <span class='label'>{{ @key }}</span>
            <span class='description'></span>
        </div>
    {{/ each }}
    </div>

    <div id="notification">ðŸ“‹ Copied: <span id="notification-id"></span></div>
    <input type="text" id="copier">

<script type="text/javascript">
    let icons = document.getElementsByClassName('icon');
    let copier = document.getElementById('copier');
    let notification = document.getElementById('notification');
    let notificationText = document.getElementById('notification-id');
    let search = document.getElementById('search');
    let timer;
    let descriptions = [
        {
            name: 'R',
            description: 'R programming language'
        },
        {
            name: 'apple',
            description: 'Apple logo'
        },
        {
            name: 'argdown',
            description: 'Argdown language'
        },
        {
            name: 'asm',
            description: 'Assembly language'
        },
        {
            name: 'audio',
            description: 'Audio file'
        },
        {
            name: 'babel',
            description: 'Babel transpiler'
        },
        {
            name: 'bazel',
            description: 'Bazel build tool'
        },
        {
            name: 'bicep',
            description: 'Bicep language'
        },
        {
            name: 'bower',
            description: 'Bower package manager'
        },
        {
            name: 'bsl',
            description: 'BSL language'
        },
        {
            name: 'c-sharp',
            description: 'C# programming language'
        },
        {
            name: 'c',
            description: 'C programming language'
        },
        {
            name: 'cake',
            description: 'Cake build tool'
        },
        {
            name: 'cake_php',
            description: 'CakePHP framework'
        },
        {
            name: 'checkbox-unchecked',
            description: 'Unchecked checkbox'
        },
        {
            name: 'checkbox',
            description: 'Checked checkbox'
        },
        {
            name: 'cjsx',
            description: 'CJSX language'
        },
        {
            name: 'clock',
            description: 'Clock icon'
        },
        {
            name: 'clojure',
            description: 'Clojure programming language'
        },
        {
            name: 'code-climate',
            description: 'Code Climate tool'
        },
        {
            name: 'code-search',
            description: 'Code search tool'
        },
        {
            name: 'coffee',
            description: 'CoffeeScript language'
        },
        {
            name: 'coffee_erb',
            description: 'CoffeeScript with ERB'
        },
        {
            name: 'coldfusion',
            description: 'ColdFusion language'
        },
        {
            name: 'config',
            description: 'Configuration file'
        },
        {
            name: 'cpp',
            description: 'C++ programming language'
        },
        {
            name: 'crystal',
            description: 'Crystal programming language'
        },
        {
            name: 'crystal_embedded',
            description: 'Embedded Crystal'
        },
        {
            name: 'css',
            description: 'CSS file'
        },
        {
            name: 'csv',
            description: 'CSV file'
        },
        {
            name: 'cu',
            description: 'CUDA file'
        },
        {
            name: 'd',
            description: 'D programming language'
        },
        {
            name: 'dart',
            description: 'Dart programming language'
        },
        {
            name: 'db',
            description: 'Database file'
        },
        {
            name: 'default',
            description: 'Default file'
        },
        {
            name: 'deprecation-cop',
            description: 'Deprecation Cop tool'
        },
        {
            name: 'docker',
            description: 'Docker tool'
        },
        {
            name: 'editorconfig',
            description: 'EditorConfig file'
        },
        {
            name: 'ejs',
            description: 'EJS template'
        },
        {
            name: 'elixir',
            description: 'Elixir programming language'
        },
        {
            name: 'elixir_script',
            description: 'ElixirScript language'
        },
        {
            name: 'elm',
            description: 'Elm programming language'
        },
        {
            name: 'error',
            description: 'Error icon'
        },
        {
            name: 'eslint',
            description: 'ESLint tool'
        },
        {
            name: 'ethereum',
            description: 'Ethereum platform'
        },
        {
            name: 'f-sharp',
            description: 'F# programming language'
        },
        {
            name: 'favicon',
            description: 'Favicon file'
        },
        {
            name: 'firebase',
            description: 'Firebase platform'
        },
        {
            name: 'firefox',
            description: 'Firefox browser'
        },
        {
            name: 'folder',
            description: 'Folder icon'
        },
        {
            name: 'font',
            description: 'Font file'
        },
        {
            name: 'git',
            description: 'Git version control'
        },
        {
            name: 'git_folder',
            description: 'Git folder'
        },
        {
            name: 'git_ignore',
            description: 'Git ignore file'
        },
        {
            name: 'github',
            description: 'GitHub platform'
        },
        {
            name: 'gitlab',
            description: 'GitLab platform'
        },
        {
            name: 'go',
            description: 'Go programming language'
        },
        {
            name: 'go2',
            description: 'Go 2 programming language'
        },
        {
            name: 'godot',
            description: 'Godot engine'
        },
        {
            name: 'gradle',
            description: 'Gradle build tool'
        },
        {
            name: 'grails',
            description: 'Grails framework'
        },
        {
            name: 'graphql',
            description: 'GraphQL query language'
        },
        {
            name: 'grunt',
            description: 'Grunt task runner'
        },
        {
            name: 'gulp',
            description: 'Gulp task runner'
        },
        {
            name: 'hacklang',
            description: 'Hack programming language'
        },
        {
            name: 'haml',
            description: 'Haml template'
        },
        {
            name: 'happenings',
            description: 'Happenings icon'
        },
        {
            name: 'haskell',
            description: 'Haskell programming language'
        },
        {
            name: 'haxe',
            description: 'Haxe programming language'
        },
        {
            name: 'heroku',
            description: 'Heroku platform'
        },
        {
            name: 'hex',
            description: 'Hex file'
        },
        {
            name: 'html',
            description: 'HTML file'
        },
        {
            name: 'html_erb',
            description: 'HTML with ERB'
        },
        {
            name: 'ignored',
            description: 'Ignored file'
        },
        {
            name: 'illustrator',
            description: 'Adobe Illustrator file'
        },
        {
            name: 'image',
            description: 'Image file'
        },
        {
            name: 'info',
            description: 'Info icon'
        },
        {
            name: 'ionic',
            description: 'Ionic framework'
        },
        {
            name: 'jade',
            description: 'Jade template'
        },
        {
            name: 'java',
            description: 'Java programming language'
        },
        {
            name: 'javascript',
            description: 'JavaScript programming language'
        },
        {
            name: 'jenkins',
            description: 'Jenkins tool'
        },
        {
            name: 'jinja',
            description: 'Jinja template'
        },
        {
            name: 'js_erb',
            description: 'JavaScript with ERB'
        },
        {
            name: 'json',
            description: 'JSON file'
        },
        {
            name: 'julia',
            description: 'Julia programming language'
        },
        {
            name: 'karma',
            description: 'Karma test runner'
        },
        {
            name: 'kotlin',
            description: 'Kotlin programming language'
        },
        {
            name: 'less',
            description: 'LESS stylesheet'
        },
        {
            name: 'license',
            description: 'License file'
        },
        {
            name: 'liquid',
            description: 'Liquid template'
        },
        {
            name: 'livescript',
            description: 'LiveScript language'
        },
        {
            name: 'lock',
            description: 'Lock file'
        },
        {
            name: 'lua',
            description: 'Lua programming language'
        },
        {
            name: 'makefile',
            description: 'Makefile'
        },
        {
            name: 'markdown',
            description: 'Markdown file'
        },
        {
            name: 'maven',
            description: 'Maven build tool'
        },
        {
            name: 'mdo',
            description: 'MDO file'
        },
        {
            name: 'mustache',
            description: 'Mustache template'
        },
        {
            name: 'new-file',
            description: 'New file icon'
        },
        {
            name: 'nim',
            description: 'Nim programming language'
        },
        {
            name: 'notebook',
            description: 'Notebook file'
        },
        {
            name: 'npm',
            description: 'NPM package manager'
        },
        {
            name: 'npm_ignored',
            description: 'Ignored NPM file'
        },
        {
            name: 'nunjucks',
            description: 'Nunjucks template'
        },
        {
            name: 'ocaml',
            description: 'OCaml programming language'
        },
        {
            name: 'odata',
            description: 'OData protocol'
        },
        {
            name: 'pddl',
            description: 'PDDL file'
        },
        {
            name: 'pdf',
            description: 'PDF file'
        },
        {
            name: 'perl',
            description: 'Perl programming language'
        },
        {
            name: 'photoshop',
            description: 'Adobe Photoshop file'
        },
        {
            name: 'php',
            description: 'PHP programming language'
        },
        {
            name: 'pipeline',
            description: 'Pipeline file'
        },
        {
            name: 'plan',
            description: 'Plan file'
        },
        {
            name: 'platformio',
            description: 'PlatformIO tool'
        },
        {
            name: 'powershell',
            description: 'PowerShell script'
        },
        {
            name: 'prisma',
            description: 'Prisma tool'
        },
        {
            name: 'project',
            description: 'Project file'
        },
        {
            name: 'prolog',
            description: 'Prolog programming language'
        },
        {
            name: 'pug',
            description: 'Pug template'
        },
        {
            name: 'puppet',
            description: 'Puppet tool'
        },
        {
            name: 'purescript',
            description: 'PureScript language'
        },
        {
            name: 'python',
            description: 'Python programming language'
        },
        {
            name: 'rails',
            description: 'Ruby on Rails framework'
        },
        {
            name: 'react',
            description: 'React library'
        },
        {
            name: 'reasonml',
            description: 'ReasonML language'
        },
        {
            name: 'rescript',
            description: 'ReScript language'
        },
        {
            name: 'rollup',
            description: 'Rollup bundler'
        },
        {
            name: 'ruby',
            description: 'Ruby programming language'
        },
        {
            name: 'rust',
            description: 'Rust programming language'
        },
        {
            name: 'salesforce',
            description: 'Salesforce platform'
        },
        {
            name: 'sass',
            description: 'Sass stylesheet'
        },
        {
            name: 'sbt',
            description: 'SBT build tool'
        },
        {
            name: 'scala',
            description: 'Scala programming language'
        },
        {
            name: 'search',
            description: 'Search icon'
        },
        {
            name: 'settings',
            description: 'Settings icon'
        },
        {
            name: 'shell',
            description: 'Shell script'
        },
        {
            name: 'slim',
            description: 'Slim template'
        },
        {
            name: 'smarty',
            description: 'Smarty template'
        },
        {
            name: 'spring',
            description: 'Spring framework'
        },
        {
            name: 'stylelint',
            description: 'Stylelint tool'
        },
        {
            name: 'stylus',
            description: 'Stylus stylesheet'
        },
        {
            name: 'sublime',
            description: 'Sublime Text'
        },
        {
            name: 'svelte',
            description: 'Svelte framework'
        },
        {
            name: 'svg',
            description: 'SVG file'
        },
        {
            name: 'swift',
            description: 'Swift programming language'
        },
        {
            name: 'terraform',
            description: 'Terraform tool'
        },
        {
            name: 'tex',
            description: 'TeX file'
        },
        {
            name: 'time-cop',
            description: 'Time Cop tool'
        },
        {
            name: 'todo',
            description: 'Todo file'
        },
        {
            name: 'tsconfig',
            description: 'TSConfig file'
        },
        {
            name: 'twig',
            description: 'Twig template'
        },
        {
            name: 'typescript',
            description: 'TypeScript programming language'
        },
        {
            name: 'vala',
            description: 'Vala programming language'
        },
        {
            name: 'video',
            description: 'Video file'
        },
        {
            name: 'vue',
            description: 'Vue.js framework'
        },
        {
            name: 'wasm',
            description: 'WebAssembly file'
        },
        {
            name: 'wat',
            description: 'WebAssembly text file'
        },
        {
            name: 'webpack',
            description: 'Webpack bundler'
        },
        {
            name: 'wgt',
            description: 'WGT file'
        },
        {
            name: 'windows',
            description: 'Windows OS'
        },
        {
            name: 'word',
            description: 'Word document'
        },
        {
            name: 'xls',
            description: 'Excel spreadsheet'
        },
        {
            name: 'xml',
            description: 'XML file'
        },
        {
            name: 'yarn',
            description: 'Yarn package manager'
        },
        {
            name: 'yml',
            description: 'YAML file'
        },
        {
            name: 'zig',
            description: 'Zig programming language'
        },
        {
            name: 'zip',
            description: 'ZIP archive'
        },
        {
            name: 'apple',
            description: 'apple logo'
        }
        
    ];

    descriptions.some(function(item) {
        let findIcon = document.querySelectorAll(`[data-name="${item.name}"]`);
        findIcon[0].querySelector('.description').innerHTML += item.description;
    });

    for(i=0;i<icons.length;i++){
        let icon = icons[i]
        icon.onclick = function(e){
            let name = this.getAttribute('data-name');

            copier.value = name;
            copier.select();
            copier.setSelectionRange(0, 99999)
            document.execCommand('copy');

            notificationText.innerHTML = name;
            animateNotification();
            e.preventDefault();
        }
    }

    function animateNotification(){
        window.clearTimeout(timer);
        search.focus();
        notification.classList.add('show');
        timer = window.setTimeout(function(){
            notification.classList.remove('show');
        }, 3000);
    }

    function sanitizeText(string){
        return string = string.replace(/-/gi,' ');
    }

    search.addEventListener('keyup', function(){
        let filter = search.value.toUpperCase();
        let wrapper = document.getElementById('icons');
        let icon = wrapper.getElementsByTagName('div');

        for (i = 0; i < icon.length; i++) {
            let textInner = sanitizeText(icon[i].innerText)
            let textContents = sanitizeText(icon[i].textContent);
            compareText = textContents || textInner;

            if (compareText.toUpperCase().indexOf(filter) > -1) {
                icon[i].style.display = '';
            } else {
                icon[i].style.display = 'none';
            }
        }
    });

    search.focus();

</script>
</body>
</html>